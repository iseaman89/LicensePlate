@page "/license-plates/update/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@inject ILicensePlateService _licensePlateService
@inject NavigationManager _navManager
@attribute [Authorize(Roles = Roles.Administartor)]

<h3>Edit License Plate</h3>

<EditForm Model="_licensePlate" OnValidSubmit="HandleUpdateLicensePlate">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label>Plate Number</label>
        <InputText class="form-control" @bind-Value="_licensePlate.PlateNumber"></InputText>
        <ValidationMessage For="@(() => _licensePlate.PlateNumber)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label>Image</label>
        <InputText class="form-control" @bind-Value="_licensePlate.Image"></InputText>
        <ValidationMessage For="@(() => _licensePlate.Image)"></ValidationMessage>
    </div>
    <button type="submit" class="btn btn-primary"><span class="oi oi-pencil"></span>Apply</button>
    <button @onclick="BackToList" class="btn btn-outline-secondary"><span class="oi oi-media-skip-backward"></span>Back To List</button>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }
    
    private LicensePlateUpdateDto _licensePlate = new();

    protected override async Task OnInitializedAsync()
    {
        var response = await _licensePlateService.GetLicensePlateForUpdate(Id);
        if (response.Success)
        {
            _licensePlate = response.Data;
        }
    }

    private async Task HandleUpdateLicensePlate()
    {
        var response = await _licensePlateService.EditLicensePlate(Id, _licensePlate);
        if (response.Success)
        {
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/license-plates/");
    }
}